%------------------------------------------------------------------------------
% This file was generated using rule 46
% with configuration ⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜
%------------------------------------------------------------------------------

%------------------------------------------------------------------------------
% The sensory given
%------------------------------------------------------------------------------

%------------------------------------------------------------------------------
% Time  State
%
%   1	⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜
%   2	⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜
%   3	⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜
%   4	⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜
%   5	⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜
%   6	⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜
%   7	⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛
%   8	⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛
%   9	⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜
%  10	⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜
%  11	⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜
%  12	⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜
%  13	⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜
%  14	⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜
%------------------------------------------------------------------------------

% The given sequence
hidden(s(c_off, obj_cell_1), 1).
hidden(s(c_off, obj_cell_2), 1).
hidden(s(c_off, obj_cell_3), 1).
hidden(s(c_off, obj_cell_4), 1).
hidden(s(c_off, obj_cell_5), 1).
hidden(s(c_on, obj_cell_6), 1).
hidden(s(c_off, obj_cell_7), 1).
hidden(s(c_off, obj_cell_8), 1).
hidden(s(c_off, obj_cell_9), 1).
hidden(s(c_off, obj_cell_10), 1).
hidden(s(c_off, obj_cell_11), 1).
senses(s(c_off, obj_cell_1), 2).
senses(s(c_off, obj_cell_2), 2).
senses(s(c_off, obj_cell_3), 2).
senses(s(c_off, obj_cell_4), 2).
senses(s(c_on, obj_cell_5), 2).
senses(s(c_on, obj_cell_6), 2).
senses(s(c_off, obj_cell_7), 2).
senses(s(c_off, obj_cell_8), 2).
senses(s(c_off, obj_cell_9), 2).
senses(s(c_off, obj_cell_10), 2).
senses(s(c_off, obj_cell_11), 2).
senses(s(c_off, obj_cell_1), 3).
senses(s(c_off, obj_cell_2), 3).
senses(s(c_off, obj_cell_3), 3).
senses(s(c_on, obj_cell_4), 3).
senses(s(c_on, obj_cell_5), 3).
senses(s(c_off, obj_cell_6), 3).
senses(s(c_off, obj_cell_7), 3).
senses(s(c_off, obj_cell_8), 3).
senses(s(c_off, obj_cell_9), 3).
senses(s(c_off, obj_cell_10), 3).
senses(s(c_off, obj_cell_11), 3).
senses(s(c_off, obj_cell_1), 4).
senses(s(c_off, obj_cell_2), 4).
senses(s(c_on, obj_cell_3), 4).
senses(s(c_on, obj_cell_4), 4).
senses(s(c_off, obj_cell_5), 4).
senses(s(c_off, obj_cell_6), 4).
senses(s(c_off, obj_cell_7), 4).
senses(s(c_off, obj_cell_8), 4).
senses(s(c_off, obj_cell_9), 4).
senses(s(c_off, obj_cell_10), 4).
senses(s(c_off, obj_cell_11), 4).
senses(s(c_off, obj_cell_1), 5).
senses(s(c_on, obj_cell_2), 5).
senses(s(c_on, obj_cell_3), 5).
senses(s(c_off, obj_cell_4), 5).
senses(s(c_off, obj_cell_5), 5).
senses(s(c_off, obj_cell_6), 5).
senses(s(c_off, obj_cell_7), 5).
senses(s(c_off, obj_cell_8), 5).
senses(s(c_off, obj_cell_9), 5).
senses(s(c_off, obj_cell_10), 5).
senses(s(c_off, obj_cell_11), 5).
senses(s(c_on, obj_cell_1), 6).
senses(s(c_on, obj_cell_2), 6).
senses(s(c_off, obj_cell_3), 6).
senses(s(c_off, obj_cell_4), 6).
senses(s(c_off, obj_cell_5), 6).
senses(s(c_off, obj_cell_6), 6).
senses(s(c_off, obj_cell_7), 6).
senses(s(c_off, obj_cell_8), 6).
senses(s(c_off, obj_cell_9), 6).
senses(s(c_off, obj_cell_10), 6).
senses(s(c_off, obj_cell_11), 6).
senses(s(c_on, obj_cell_1), 7).
senses(s(c_off, obj_cell_2), 7).
senses(s(c_off, obj_cell_3), 7).
senses(s(c_off, obj_cell_4), 7).
senses(s(c_off, obj_cell_5), 7).
senses(s(c_off, obj_cell_6), 7).
senses(s(c_off, obj_cell_7), 7).
senses(s(c_off, obj_cell_8), 7).
senses(s(c_off, obj_cell_9), 7).
senses(s(c_off, obj_cell_10), 7).
senses(s(c_on, obj_cell_11), 7).
senses(s(c_off, obj_cell_1), 8).
senses(s(c_off, obj_cell_2), 8).
senses(s(c_off, obj_cell_3), 8).
senses(s(c_off, obj_cell_4), 8).
senses(s(c_off, obj_cell_5), 8).
senses(s(c_off, obj_cell_6), 8).
senses(s(c_off, obj_cell_7), 8).
senses(s(c_off, obj_cell_8), 8).
senses(s(c_off, obj_cell_9), 8).
senses(s(c_on, obj_cell_10), 8).
senses(s(c_on, obj_cell_11), 8).
senses(s(c_off, obj_cell_1), 9).
senses(s(c_off, obj_cell_2), 9).
senses(s(c_off, obj_cell_3), 9).
senses(s(c_off, obj_cell_4), 9).
senses(s(c_off, obj_cell_5), 9).
senses(s(c_off, obj_cell_6), 9).
senses(s(c_off, obj_cell_7), 9).
senses(s(c_off, obj_cell_8), 9).
senses(s(c_on, obj_cell_9), 9).
senses(s(c_on, obj_cell_10), 9).
senses(s(c_off, obj_cell_11), 9).
senses(s(c_off, obj_cell_1), 10).
senses(s(c_off, obj_cell_2), 10).
senses(s(c_off, obj_cell_3), 10).
senses(s(c_off, obj_cell_4), 10).
senses(s(c_off, obj_cell_5), 10).
senses(s(c_off, obj_cell_6), 10).
senses(s(c_off, obj_cell_7), 10).
senses(s(c_on, obj_cell_8), 10).
senses(s(c_on, obj_cell_9), 10).
senses(s(c_off, obj_cell_10), 10).
senses(s(c_off, obj_cell_11), 10).
senses(s(c_off, obj_cell_1), 11).
senses(s(c_off, obj_cell_2), 11).
senses(s(c_off, obj_cell_3), 11).
senses(s(c_off, obj_cell_4), 11).
senses(s(c_off, obj_cell_5), 11).
senses(s(c_off, obj_cell_6), 11).
senses(s(c_on, obj_cell_7), 11).
senses(s(c_on, obj_cell_8), 11).
senses(s(c_off, obj_cell_9), 11).
senses(s(c_off, obj_cell_10), 11).
senses(s(c_off, obj_cell_11), 11).
senses(s(c_off, obj_cell_1), 12).
senses(s(c_off, obj_cell_2), 12).
senses(s(c_off, obj_cell_3), 12).
senses(s(c_off, obj_cell_4), 12).
senses(s(c_off, obj_cell_5), 12).
senses(s(c_on, obj_cell_6), 12).
senses(s(c_on, obj_cell_7), 12).
senses(s(c_off, obj_cell_8), 12).
senses(s(c_off, obj_cell_9), 12).
senses(s(c_off, obj_cell_10), 12).
senses(s(c_off, obj_cell_11), 12).
senses(s(c_off, obj_cell_1), 13).
senses(s(c_off, obj_cell_2), 13).
senses(s(c_off, obj_cell_3), 13).
senses(s(c_off, obj_cell_4), 13).
senses(s(c_on, obj_cell_5), 13).
senses(s(c_on, obj_cell_6), 13).
senses(s(c_off, obj_cell_7), 13).
senses(s(c_off, obj_cell_8), 13).
senses(s(c_off, obj_cell_9), 13).
senses(s(c_off, obj_cell_10), 13).
senses(s(c_off, obj_cell_11), 13).
senses(s(c_off, obj_cell_1), 14).
senses(s(c_off, obj_cell_2), 14).
senses(s(c_off, obj_cell_3), 14).
senses(s(c_on, obj_cell_4), 14).
senses(s(c_on, obj_cell_5), 14).
senses(s(c_off, obj_cell_6), 14).
senses(s(c_off, obj_cell_7), 14).
senses(s(c_off, obj_cell_8), 14).
senses(s(c_off, obj_cell_9), 14).
senses(s(c_off, obj_cell_10), 14).
senses(s(c_off, obj_cell_11), 14).

% Elements
is_object(obj_cell_1).
is_object(obj_cell_2).
is_object(obj_cell_3).
is_object(obj_cell_4).
is_object(obj_cell_5).
is_object(obj_cell_6).
is_object(obj_cell_7).
is_object(obj_cell_8).
is_object(obj_cell_9).
is_object(obj_cell_10).
is_object(obj_cell_11).
is_time(1..14).
is_concept(c_on).
is_concept(c_off).

% Input exclusions
% Every sensor is either on or off
% S : sensor → on(S) ⊕ off(S)

% At most one
:-
	holds(s(c_on, X), T),
	holds(s(c_off, X), T).

% At least one
:-
	permanent(isa(t_sensor, X)),
	is_time(T),
	not holds(s(c_on, X), T),
	not holds(s(c_off, X), T).

% Incompossibility
incompossible(s(c_on, X), s(c_off, X)) :-
	permanent(isa(t_sensor, X)).

exclusion_output("c_on+c_off").
